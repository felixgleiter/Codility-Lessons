function minAbsSum(A) {
     function getSum(total, num) {
        return total + num;
    }
    function convertDecimalToSignBinary(N) {
        binDigitArray = [];
        while (N > 0) {
            if (N % 2 == 0) {
                binDigitArray.unshift(-1);
                N /= 2;
            } else if (N % 2 == 1) {
                binDigitArray.unshift(1);
                N = (N - 1)/2;
            }
        }
        return binDigitArray;
    }
    var val = Math.abs(A.reduce(getSum, 0));
    for (var i = (2**(A.length) - 2); i > (2**(A.length - 1)) - 1; i--) {
        var S = convertDecimalToSignBinary(i);
        var total = 0;
        for (var j = 0; j < A.length; j++) {
            total += A[j]*S[j];
        }
        if (Math.abs(total) < val) {
            val = Math.abs(total);
        }
    }
    return val;
}

//Second Version, Much Improved:

function minAbsSum(A) {
    function getSum(total, num) {
        return total + num;
    }
    A = A.map(Math.abs).sort(function(a,b){return b-a});
    var val = A.reduce(getSum,0);
    for (var j = 1; j < Math.ceil(A.length/2) + 1; j++) {
        var total = A.slice(0,j).reduce(getSum,0);
        for (var k = j; k < A.length; k++) {
            total < 0 ? total += A[k] : total -= A[k];
        }
        if (Math.abs(total) < val) {
            val = Math.abs(total);
        }
    }
    return val;
}
